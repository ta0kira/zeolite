/* -----------------------------------------------------------------------------
Copyright 2021,2023 Kevin P. Barry

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
----------------------------------------------------------------------------- */

// Author: Kevin P. Barry [ta0kira@gmail.com]

$ModuleOnly$

concrete LockRef {
  @type new () -> (StateTransition<String,ReferenceState>)
}

concrete DecrRefIsZero {
  @type new () -> (StatePredicate<String,ReferenceState>)
}

concrete UnlockRef {
  @type new () -> (StateTransition<String,ReferenceState>)
}

concrete FreeObject {
  @type new () -> (StateTransition<String,ReferenceState>)
}

concrete DecrWeakIsZero {
  @type new () -> (StatePredicate<String,ReferenceState>)
}

concrete FreeRef {
  @type new () -> (StateTransition<String,ReferenceState>)
}

concrete IncrRefIsOne {
  @type new () -> (StatePredicate<String,ReferenceState>)
}

concrete DecrRef {
  @type new () -> (StateTransition<String,ReferenceState>)
}

concrete DecrWeak {
  @type new () -> (StateTransition<String,ReferenceState>)
}

concrete PlusLockModLockZero {
  @type new () -> (StatePredicate<String,ReferenceState>)
}

concrete MinusLockPlusOne {
  @type new () -> (StateTransition<String,ReferenceState>)
}

concrete MinusLock {
  @type new () -> (StateTransition<String,ReferenceState>)
}
