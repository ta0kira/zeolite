/* -----------------------------------------------------------------------------
Copyright 2021 Kevin P. Barry

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
----------------------------------------------------------------------------- */

// Author: Kevin P. Barry [ta0kira@gmail.com]

// Creates Order<Int> counters, for use with traverse.
concrete Counter {
  // Create a sequence of indices for a Container of the given size.
  @type zeroIndexed (Int) -> (optional Order<Int>)
  // Create a reversed sequence of indices for a Container of the given size.
  @type revZeroIndexed (Int) -> (optional Order<Int>)
  // Create an unbounded Int sequence.
  @type unlimited () -> (optional Order<Int>)
}

// Creates an Order<#x> that repeats a single value, for use with traverse.
concrete Repeat<#x> {
  // Repeat the value the specified number of times.
  @category times<#y>     (#y,Int) -> (optional Order<#y>)
  // Repeat the value an unlimited number of times.
  @category unlimited<#y> (#y)     -> (optional Order<#y>)
}

// Determines min and max of two values.
concrete Ranges {
  // Get the lower value. (Defaults to the first value.)
  @category min<#x>
    #x defines LessThan<#x>
  (#x,#x) -> (#x)

  // Get the higher value. (Defaults to the second value.)
  @category max<#x>
    #x defines LessThan<#x>
  (#x,#x) -> (#x)

  // Determine the lower and higher values. (Defaults to the same order.)
  @category minMax<#x>
    #x defines LessThan<#x>
  (#x,#x) -> (#x,#x)
}
