/* -----------------------------------------------------------------------------
Copyright 2023 Kevin P. Barry

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
----------------------------------------------------------------------------- */

// Author: Kevin P. Barry [ta0kira@gmail.com]

$ModuleOnly$

// TODO: Tokenize scope qualifiers.
// TODO: Tokenize operators, _, <>, \, stray chars.
// TODO: Tokenize numbers.

concrete ZeoliteWhitespace {
  defines NamedTokenizer
}

concrete ZeoliteLineComment {
  defines NamedTokenizer
}

concrete ZeoliteBlockComment {
  defines NamedTokenizer
}

concrete ZeoliteUpperSymbol {
  defines NamedTokenizer
}

concrete ZeoliteLowerSymbol {
  defines NamedTokenizer
}

concrete ZeoliteParamName {
  defines NamedTokenizer
}

concrete ZeoliteStringLiteral {
  defines NamedTokenizer
}

concrete ZeoliteCharLiteral {
  defines NamedTokenizer
}

concrete ZeoliteBraceSection {
  defines NamedTokenizer
}

concrete ZeoliteParenSection {
  defines NamedTokenizer
}

concrete ZeoliteSquareSection {
  defines NamedTokenizer
}

concrete ZeolitePragma {
  defines NamedTokenizer
}

concrete ZeoliteTestcase {
  defines NamedTokenizer
}

concrete ZeoliteOptionalSeparator {
  defines Default
  refines Tokenizer<ZeoliteParseContext, ZeoliteParsed>

  visibility Tokenizer<ZeoliteParseContext, ZeoliteParsed>

  @type parseAny (TextStream, ZeoliteParseContext, Append<ZeoliteParsed>) -> ()
}
