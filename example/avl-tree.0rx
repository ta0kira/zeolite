concrete Main {
  defines Runner
}

define Main {
  run () {
    Tree<Int,String> tree <- Tree<Int,String>$new()
    ~ tree
        .set(2,"c")
        .set(0,"a")
        .set(3,"d")
        .set(1,"b")
    ~ check(tree,2)
    ~ check(tree,0)
    ~ check(tree,1)
    ~ check(tree,4)
    ~ check(tree,3)
    ~ check(tree,5)
  }

  @type check (TreeRead<Int,String>,Int) -> ()
  check (tree,key) {
    scoped {
      optional String value <- tree.get(key)
    } in if (present(value)) {
      ~ LazyStream<String>$new()
          .append("Found: \"")
          .append(require(value))
          .append("\"\n")
          .write(SimpleOutput$stderr())
    } else {
      ~ LazyStream<String>$new()
          .append("Not Found\n")
          .write(SimpleOutput$stderr())
    }
  }
}
