@value interface Parser<|#x> {
  run (ParseState<any>) -> (ParseState<#x>)
}

concrete ParseState<|#x> {
  @category new (String) -> (ParseState<Void>)

  @value getValue () -> (ErrorOr<#x>)
  @value setValue<#y> (ErrorOr<#y>) -> (ParseState<#y>)

  @value getPosition () -> (String)

  @value atEof () -> (Bool)

  @value hasAnyError () -> (Bool)
  @value hasBrokenInput () -> (Bool)

  @value setBroken (Formatted) -> (ParseState<all>)
  @value convertError<#y> () -> (ParseState<#y>)

  @value current () -> (Char)
  @value advance () -> (ParseState<#x>)
}

concrete Parse {
  @type try<#x> (Parser<#x>) -> (Parser<#x>)
  @type string (String) -> (Parser<String>)
  @type sequenceOf (String, Int /*min*/, Int /*max*/) -> (Parser<String>)
  @type char (Char) -> (Parser<Char>)
  @type or<#x> (Parser<#x>,Parser<#x>) -> (Parser<#x>)
  @type then<#x> (Parser<#x>,Parser<any>) -> (Parser<#x>)
}
