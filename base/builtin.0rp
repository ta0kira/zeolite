/* -----------------------------------------------------------------------------
Copyright 2019-2020 Kevin P. Barry

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
----------------------------------------------------------------------------- */

// Author: Kevin P. Barry [ta0kira@gmail.com]

concrete Bool {
  refines AsBool
  refines AsInt
  refines AsFloat
  refines Formatted

  defines Default
  defines Equals<Bool>
}

concrete Char {
  refines AsBool
  refines AsChar
  refines AsInt
  refines AsFloat
  refines Formatted

  defines Default
  defines Equals<Char>
  defines LessThan<Char>
}

concrete Float {
  refines AsBool
  refines AsInt
  refines AsFloat
  refines Formatted

  defines Default
  defines Equals<Float>
  defines LessThan<Float>
}

concrete Int {
  refines AsBool
  refines AsChar
  refines AsInt
  refines AsFloat
  refines Formatted

  defines Default
  defines Equals<Int>
  defines LessThan<Int>
}

concrete String {
  refines AsBool
  refines Formatted
  refines ReadAt<Char>
  refines SubSequence

  defines Default
  defines Equals<String>
  defines LessThan<String>

  @type builder () -> ([Append<String>&Build<String>])
}

@value interface AsBool {
  asBool () -> (Bool)
}

@value interface AsChar {
  asChar () -> (Char)
}

@value interface AsFloat {
  asFloat () -> (Float)
}

@value interface AsInt {
  asInt () -> (Int)
}

@value interface Formatted {
  formatted () -> (String)
}

@value interface Append<#x|> {
  append (#x) -> (#self)
}

@value interface Build<|#x> {
  build () -> (#x)
}

@value interface Container {
  size () -> (Int)
}

@value interface ReadAt<|#x> {
  refines Container

  readAt (Int) -> (#x)
}

@value interface SubSequence {
  refines Container

  subSequence (Int,Int) -> (#self)
}

@type interface Default {
  default () -> (#self)
}

@type interface Equals<#x|> {
  equals (#x,#x) -> (Bool)
}

@type interface LessThan<#x|> {
  lessThan (#x,#x) -> (Bool)
}
