<?xml version="1.0" encoding="UTF-8"?>

<!-- Copy or link this file to $HOME/.local/share/katepart5/syntax/zeolite.xml
     to enable syntax highlighting in Kate (https://kate-editor.org/). -->

<language
    name="Zeolite"
    section="Sources"
    version="2.5"
    kateversion="2.4"
    indenter="cstyle"
    style="Zeolite"
    extensions="*.0rp;*.0rx;*.0rt"
    author="Kevin P. Barry (ta0kira@gmail.com)"
    priority="0"
  >

  <highlighting>
    <list name="keywords">
      <item> allows </item>
      <item> break </item>
      <item> cleanup </item>
      <item> continue </item>
      <item> defines </item>
      <item> elif </item>
      <item> else </item>
      <item> empty </item>
      <item> fail </item>
      <item> false </item>
      <item> if </item>
      <item> in </item>
      <item> _ </item>
      <item> present </item>
      <item> reduce </item>
      <item> refines </item>
      <item> require </item>
      <item> requires </item>
      <item> return </item>
      <item> self </item>
      <item> scoped </item>
      <item> strong </item>
      <item> true </item>
      <item> typename </item>
      <item> update </item>
      <item> while </item>
    </list>

    <list name="typeDeclare">
      <item> concrete </item>
      <item> interface </item>
    </list>

    <list name="typeDefine">
      <item> define </item>
    </list>

    <list name="testHeader">
      <item> testcase </item>
    </list>

    <list name="internalTypes">
      <item> types </item>
    </list>

    <list name="scope">
      <item> @category </item>
      <item> @type </item>
      <item> @value </item>
    </list>

    <list name="storage">
      <item> optional </item>
      <item> weak </item>
    </list>

    <list name="keywordCategory">
      <item> all </item>
      <item> any </item>
    </list>

    <list name="builtinCategory">
      <item> Bool </item>
      <item> String </item>
      <item> Char </item>
      <item> Int </item>
      <item> Float </item>
      <item> LessThan </item>
      <item> Equals </item>
      <item> Formatted </item>
      <item> ReadPosition </item>
    </list>

    <contexts>

      <context name="Normal Text" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <IncludeRules context="Any Comment" />
        <keyword attribute="Keyword" context="#stay" String="keywords" />
        <keyword attribute="Scope Qualifier" context="#stay" String="scope" />
        <keyword attribute="Storage Qualifier" context="#stay" String="storage" />
        <keyword attribute="Testcase Keyword" context="Test Name" String="testHeader" />
        <keyword attribute="Keyword" context="Declare Type" String="typeDeclare" />
        <keyword attribute="Keyword" context="Define Type" String="typeDefine" />
        <IncludeRules context="Any Expression" />
        <Detect2Chars attribute="Assign" context="#stay" char="&lt;" char1="-" />
        <Detect2Chars attribute="Assign" context="#stay" char="-" char1="&gt;" />
        <DetectChar attribute="Voided" context="#stay" char="~" />
      </context>

      <context name="Declare Type" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <RegExpr attribute="Define Category Name" context="#stay" String="\b[A-Z][a-zA-Z0-9]*\b" />
        <DetectChar attribute="Params Brace" context="Type Params" char="&lt;" />
        <IncludeRules context="Any Comment" />
        <AnyChar attribute="Error" context="#stay" String="#$}.*@!=%+-/\&amp;|&gt;()[]" />
        <RegExpr context="#pop" String=".*" lookAhead="true" />
      </context>

      <context name="Define Type" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <RegExpr attribute="Define Category Name" context="#stay" String="\b[A-Z][a-zA-Z0-9]*\b" />
        <DetectChar context="#pop" char="{" lookAhead="true" />
        <IncludeRules context="Any Comment" />
        <AnyChar attribute="Error" context="#stay" String="#$}.*@!=%+-/\&lt;&gt;()[]" />
        <RegExpr attribute="Error" context="#stay" String="[a-z0-9][a-zA-Z0-9]*\b" />
      </context>

      <context name="Test Name" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <DetectChar context="Test Header" char="{" />
        <DetectChar context="#pop" char="}" lookAhead="true" />
        <IncludeRules context="Any Comment" />
        <DetectChar attribute="String" context="String" char="&quot;" />
        <RegExpr attribute="Error" context="#stay" String="[^ \n\t\r]" />
      </context>

      <context name="Test Header" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <DetectChar context="#pop" char="}" lookAhead="true" />
        <Detect2Chars attribute="Error" context="#stay" char="&lt;" char1="-" />
        <Detect2Chars attribute="Error" context="#stay" char="-" char1="&gt;" />
        <WordDetect attribute="Error" context="#stay" String="optional" />
        <WordDetect attribute="Error" context="#stay" String="weak" />
        <WordDetect attribute="Error" context="#stay" String="testcase" />
        <WordDetect attribute="Test Keyword" context="#stay" String="error" />
        <WordDetect attribute="Test Keyword" context="#stay" String="crash" />
        <WordDetect attribute="Test Keyword" context="#stay" String="success" />
        <WordDetect attribute="Test Keyword" context="Test Output" String="require" />
        <WordDetect attribute="Test Keyword" context="Test Output" String="exclude" />
        <WordDetect attribute="Keyword" context="#stay" String="empty" />
        <IncludeRules context="Any Expression" />
        <keyword attribute="Error" context="#stay" String="keywords" />
      </context>

      <context name="Test Output" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <IncludeRules context="Any Comment" />
        <WordDetect attribute="Test Keyword" context="#stay" String="any" />
        <WordDetect attribute="Test Keyword" context="#stay" String="compiler" />
        <WordDetect attribute="Test Keyword" context="#stay" String="stderr" />
        <WordDetect attribute="Test Keyword" context="#stay" String="stdout" />
        <RegExpr context="#pop" String="&quot;" lookAhead="true" />
        <RegExpr attribute="Error" context="#stay" String="[^ \n\t\r]" />
      </context>

      <context name="Any Expression" attribute="Normal Text" lineEndContext="#stay" >
        <IncludeRules context="Any Comment" />
        <RegExpr attribute="Number" context="#stay" String="0[xX][0-9a-fA-F]+" />
        <RegExpr attribute="Number" context="#stay" String="[0-9]+(\.[0-9]+)" />
        <Int attribute="Number" context="#stay" />
        <DetectChar attribute="Infix Func" context="#stay" char="`" />
        <DetectChar attribute="String" context="String" char="&quot;" />
        <DetectChar attribute="Char" context="Char" char="'" />
        <Detect2Chars attribute="Caller" context="#stay" char="$" char1="$" />
        <Detect2Chars attribute="Operator" context="#stay" char="|" char1="|" />
        <Detect2Chars attribute="Operator" context="#stay" char="&amp;" char1="&amp;" />
        <Detect2Chars attribute="Operator" context="#stay" char="=" char1="=" />
        <Detect2Chars attribute="Operator" context="#stay" char="!" char1="=" />
        <Detect2Chars attribute="Operator" context="#stay" char="&lt;" char1="=" />
        <Detect2Chars attribute="Operator" context="#stay" char="&gt;" char1="=" />
        <AnyChar attribute="Operator" context="#stay" String="&lt;&gt;+-*%/" />
        <DetectChar attribute="Caller" context="#stay" char="$" />
        <IncludeRules context="Any Type" />
        <AnyChar attribute="Error" context="#stay" String="]|&amp;" />
      </context>

      <context name="Any Type" attribute="Normal Text" lineEndContext="#stay" >
        <IncludeRules context="Any Comment" />
        <DetectChar attribute="Merge Brace" context="Merge Types" char="[" />
        <keyword attribute="Builtin Category Name" context="Type Name" String="builtinCategory" />
        <keyword attribute="Keyword" context="Type Name" String="internalTypes" />
        <keyword attribute="Keyword" context="#stay" String="keywordCategory" />
        <RegExpr attribute="Category Name" context="Type Name" String="\b[A-Z][a-zA-Z0-9]*\b" />
        <RegExpr attribute="Param Name" context="#stay" String="#[a-z][a-zA-Z0-9]*\b" />
        <RegExpr attribute="Error" context="#stay" String="#[A-Z0-9][a-zA-Z0-9]*\b" />
      </context>

      <context name="Any Comment" attribute="Normal Text" lineEndContext="#pop" >
        <DetectSpaces />
        <Detect2Chars attribute="Comment" context="Line Comment" char="/" char1="/" />
        <Detect2Chars attribute="Comment" context="Block Comment" char="/" char1="*" beginRegion="Comment" />
      </context>

      <context name="Line Comment" attribute="Comment" lineEndContext="#pop" >
        <LineContinue attribute="Comment" context="#stay" />
        <DetectIdentifier />
      </context>

      <context name="Block Comment" attribute="Comment" lineEndContext="#stay">
        <DetectSpaces />
        <LineContinue attribute="Comment" context="#stay" />
        <Detect2Chars attribute="Comment" context="#pop" char="*" char1="/" endRegion="Comment" />
        <DetectIdentifier />
      </context>

      <context name="String" attribute="String" lineEndContext="#stay" >
        <HlCStringChar attribute="Escaped Char" context="#stay" />
        <DetectChar attribute="String" context="#pop" char="&quot;" />
      </context>

      <context name="Char" attribute="Char" lineEndContext="#stay" >
        <HlCChar attribute="Escaped Char" context="#stay" />
        <DetectChar attribute="Char" context="#pop" char="'" />
      </context>

      <context name="Type Name" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <DetectChar attribute="Params Brace" context="Type Args" char="&lt;" />
        <IncludeRules context="Any Comment" />
        <RegExpr context="#pop" String=".*" lookAhead="true" />
      </context>

      <context name="Type Args" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <DetectChar attribute="Params Brace" context="#pop#pop" char="&gt;" />
        <IncludeRules context="Any Comment" />
        <keyword attribute="Error" context="#stay" String="storage" />
        <keyword attribute="Error" context="#stay" String="scope" />
        <AnyChar attribute="Error" context="#stay" String="${}.&amp;*@!=%+-/\&lt;]|()" />
        <IncludeRules context="Any Type" />
        <RegExpr attribute="Error" context="#stay" String="\b[a-z][a-zA-Z0-9]*" />
      </context>

      <context name="Type Params" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <DetectChar attribute="Params Brace" context="#pop#pop" char="&gt;" />
        <IncludeRules context="Any Comment" />
        <DetectChar attribute="Type Delim" context="#stay" char="|" />
        <RegExpr attribute="Param Name" context="#stay" String="#[a-z][a-zA-Z0-9]*\b" />
        <RegExpr attribute="Error" context="#stay" String="#[A-Z0-9][a-zA-Z0-9]*\b" />
        <AnyChar attribute="Error" context="#stay" String="${}.&amp;*@!=%+-/\&lt;[]()" />
        <RegExpr attribute="Error" context="#stay" String="\b[a-zA-Z][a-zA-Z0-9]*" />
      </context>

      <context name="Merge Types" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <IncludeRules context="Any Comment" />
        <DetectChar attribute="Merge Delim" context="Merge Union" char="|" />
        <DetectChar attribute="Merge Delim" context="Merge Intersect" char="&amp;" />
        <DetectChar attribute="Error" context="#pop" char="]" />
        <IncludeRules context="Merge Common" />
      </context>

      <context name="Merge Union" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <DetectChar attribute="Merge Delim" context="#stay" char="|" />
        <DetectChar attribute="Error" context="#stay" char="&amp;" />
        <DetectChar attribute="Merge Brace" context="#pop#pop" char="]" />
        <IncludeRules context="Merge Common" />
      </context>

      <context name="Merge Intersect" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <DetectChar attribute="Merge Delim" context="#stay" char="&amp;" />
        <DetectChar attribute="Error" context="#stay" char="|" />
        <DetectChar attribute="Merge Brace" context="#pop#pop" char="]" />
        <IncludeRules context="Merge Common" />
      </context>

      <context name="Merge Common" attribute="Normal Text" lineEndContext="#stay" >
        <DetectSpaces />
        <IncludeRules context="Any Comment" />
        <keyword attribute="Error" context="#stay" String="storage" />
        <keyword attribute="Error" context="#stay" String="scope" />
        <AnyChar attribute="Error" context="#stay" String="${}.*@!=%+-/\&lt;&gt;()," />
        <IncludeRules context="Any Type" />
        <RegExpr attribute="Error" context="#stay" String="\b[a-z][a-zA-Z0-9]*" />
      </context>

    </contexts>

    <itemDatas>
      <itemData name="Normal Text" defStyleNum="dsNormal" spellChecking="false" />
      <itemData name="Keyword" defStyleNum="dsKeyword" spellChecking="false" />
      <itemData name="Scope Qualifier" defStyleNum="dsFunction" spellChecking="false" />
      <itemData name="Storage Qualifier" defStyleNum="dsKeyword" spellChecking="false" />
      <itemData name="Builtin Category Name" defStyleNum="dsDataType" italic="true" spellChecking="false" />
      <itemData name="Category Name" defStyleNum="dsDataType" spellChecking="false" />
      <itemData name="Define Category Name" defStyleNum="dsDataType" bold="true" spellChecking="false" />
      <itemData name="Param Name" defStyleNum="dsDataType" italic="true" spellChecking="false" />
      <itemData name="String" defStyleNum="dsString" spellChecking="true" />
      <itemData name="Char" defStyleNum="dsChar" spellChecking="true" />
      <itemData name="Escaped Char" defStyleNum="dsChar" spellChecking="false" />
      <itemData name="Assign" defStyleNum="dsOthers" bold="true" spellChecking="false" />
      <itemData name="Testcase Keyword" defStyleNum="dsAlert" spellChecking="false" />
      <itemData name="Test Keyword" defStyleNum="dsOperator" bold="false" color="#04e040" selColor="#04e040" spellChecking="false" />
      <itemData name="Params Brace" defStyleNum="dsOperator" bold="false" color="#c02040" selColor="#c02040" spellChecking="false" />
      <itemData name="Infix Func" defStyleNum="dsOperator" bold="true" color="#c02040" selColor="#c02040" spellChecking="false" />
      <itemData name="Merge Brace" defStyleNum="dsOthers" bold="true" />
      <itemData name="Type Delim" defStyleNum="dsOperator" bold="false" color="#c04040" selColor="#c04040" spellChecking="false" />
      <itemData name="Merge Delim" defStyleNum="dsOthers" spellChecking="false" />
      <itemData name="Operator" defStyleNum="dsOperator" spellChecking="false" />
      <itemData name="Caller" defStyleNum="dsFunction" spellChecking="false" />
      <itemData name="Voided" defStyleNum="dsOthers" spellChecking="false" />
      <itemData name="Comment" defStyleNum="dsComment" spellChecking="true" />
      <itemData name="Error" defStyleNum="dsError" spellChecking="false" />
      <itemData name="Number" defStyleNum="dsDecVal" spellChecking="false" />
    </itemDatas>

  </highlighting>

  <general>
    <comments>
      <comment name="singleLine" start="//" />
      <comment name="multiLine" start="/*" end="*/" region="Comment" />
    </comments>
    <keywords casesensitive="1" additionalDeliminator="$" />
  </general>

</language>
<!-- kate: indent-width 2; tab-width 2; -->
