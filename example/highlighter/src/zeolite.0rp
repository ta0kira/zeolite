/* -----------------------------------------------------------------------------
Copyright 2023 Kevin P. Barry

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
----------------------------------------------------------------------------- */

// Author: Kevin P. Barry [ta0kira@gmail.com]

$ModuleOnly$

concrete ZeoliteToken {
  refines Formatted
  refines TestCompare<ZeoliteToken>
  refines TextToken<String>

  visibility Tokenizer<String, ZeoliteToken>

  @type new (String content:, String label:) -> (optional ZeoliteToken)
}

@type interface NamedTokenizer {
  tokenizer () -> (Tokenizer<String, ZeoliteToken>)
  tokenizerName () -> (String)
}

concrete ZeoliteTokenizers {
  refines KVReader<String, Tokenizer<String, ZeoliteToken>>

  @type new () -> (ZeoliteTokenizers)

  @value include<#t>
    #t defines NamedTokenizer
  () -> (ZeoliteTokenizers)
}

concrete ZeoliteSelectFrom {
  refines Tokenizer<String, ZeoliteToken>

  visibility Tokenizer<String, ZeoliteToken>

  @type new () -> (ZeoliteSelectFrom)

  @value include<#t>
    #t defines NamedTokenizer
  () -> (ZeoliteSelectFrom)
}

concrete ZeoliteWhitespace {
  defines NamedTokenizer
}

concrete ZeoliteLineComment {
  defines NamedTokenizer
}

concrete ZeoliteCategoryName {
  defines NamedTokenizer
}

concrete ZeoliteParamName {
  defines NamedTokenizer
}
