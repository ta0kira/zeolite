/* -----------------------------------------------------------------------------
Copyright 2021,2023 Kevin P. Barry

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
----------------------------------------------------------------------------- */

// Author: Kevin P. Barry [ta0kira@gmail.com]

testcase "zero sleep is allowed" {
  success
}

unittest zeroSleep {
  \ Realtime.sleepSeconds(0.0)
}

unittest negativeSleep {
  \ Realtime.sleepSeconds(-0.1)
}

unittest zeroPrecise {
  \ Realtime.sleepSecondsPrecise(0.0)
}

unittest negativePrecise {
  \ Realtime.sleepSecondsPrecise(-0.1)
}


testcase "sleepSeconds() does not interfere with test timeout" {
  failure
  require "signal 14"
  timeout 1
}

unittest test {
  \ Realtime.sleepSeconds(5.0)
}


testcase "sleepSecondsPrecise() does not interfere with test timeout" {
  failure
  require "signal 14"
  timeout 1
}

unittest test {
  \ Realtime.sleepSecondsPrecise(5.0)
}


testcase "monoSeconds() diff is somewhat accurate" {
  success TestChecker
  timeout 2
}

unittest testSleep {
  Float start <- Realtime.monoSeconds()
  \ Realtime.sleepSeconds(0.5)
  Float stop <- Realtime.monoSeconds()
  \ (stop-start) `Matches:with` CheckValue:betweenEquals(0.5, 0.6)
}

unittest testPrecise {
  Float start <- Realtime.monoSeconds()
  \ Realtime.sleepSecondsPrecise(0.5)
  Float stop <- Realtime.monoSeconds()
  \ (stop-start) `Matches:with` CheckValue:betweenEquals(0.5, 0.51)
}
